8) //call by reference
#include <stdio.h>
void swap(int *a, int *b);
int main()
{
    int a, b;
   printf("enter the two numbers");
   scanf("%d %d",&a,&b);
   swap(a,b);
   printf("after swapping %d %d",a,b);
    return 0;
}
void swap(int *a,int *b){
    int temp;
    temp=*a;
    *a=*b;
    *b=temp;
}

//call b
#include <stdio.h>
 void swap(int a, int b);
int main()
{
    int a, b;
  printf("enter the two numbers");
   scanf("%d %d",&a,&b);
   swap(a,b);
   printf("after swapping %d %d",a,b);
     return 0;
}
 void swap(int a,int b){
    int temp;
    temp=a;
    a=b;
     b=temp;
 }


2) Biggest number in an array of size 10
#include <stdio.h>

int main()
{
    int arr[10],i;
    int big=arr[0];
    printf("enter the array elements");
    for(i=0;i<10;i++){
        scanf("%d",&arr[i]);
    }
    for(i=0;i<10;i++){
        if(arr[i]>big){
            big=arr[i];
        }
    }
    printf(" biggest number is %d",big);

    return 0;
}


9) //using dynamic memory allocation
#include <stdio.h>
#include<stdlib.h>
int main()
{
    int *p;
    p=(int *)malloc(sizeof(int)*10);
    int big=p[0],i;
    printf("enter the array elements");
    for(i=0;i<10;i++){
        scanf("%d",&p[i]);
       
    }
   
     for(i=0;i<10;i++){
       if((p[i])>big){
            big=(p[i]);
        }
 }
   printf(" biggest number is %d\t",big);

    return 0;
}


4)
search a number in an array using dynamic memory allocation
#include <stdio.h>
#include<stdlib.h>
int main()
{
    int *p;
    p=(int *)malloc(sizeof(int)*10);
    int key,flag=0,i;
    printf("enter the array elements");
    for(i=0;i<10;i++){
        scanf("%d",&p[i]);
       
    }
   printf("enter the key value");
   scanf("%d",&key);
     for(i=0;i<10;i++){
       if((p[i])==key){
        flag=1;
        }
 }
 if(flag==1){
     printf("key found");
 }
     else
     printf("key not found");
 
 return 0;
}



6)//Structure
#include<stdio.h>
#include<stdlib.h>
struct student{
    char usn[10];
    char name[20];
    char branch[10];
};
 typedef struct student std;
struct emp{
    char id[10];
    char name[10];
    char address[10];
};
 typedef struct emp emp1;

struct faculty{
    char name[10];
    int age;
};
typedef struct faculty fac;
int main(){
    
    std *s1;
    emp1 *e1;
     fac *f1;
    
    s1=(std*)malloc(sizeof(std));
    e1=(emp1*)malloc(sizeof(emp1));
    f1=(fac*)malloc(sizeof(fac));
    printf("student details");
    scanf("%s %s %s",&s1->usn,&s1->name,&s1->branch);
    printf("%s\t %s\t %s\t",s1->usn,s1->name,s1->branch);
    
    printf("employee details");
    scanf("%s %s %s",&e1->id,&e1->name,&e1->address);
    printf("%s\t %s\t %s\t",e1->id,e1->name,e1->address);
    
    printf("faculty details");
    scanf("%s %d",&f1->name,&f1->age);
    printf("%s\t %d",f1->name,f1->age);
    return 0;
    
}



1)#include <stdio.h>
#include<string.h>
struct emp{
    char id[10];
    char name[20];
    char address[50];
    
};
int main()
{
    struct emp emp1[3];
    char sid[10],sname[20],saddress[50];
    int flag=0;
    int sindex=0;
    printf("Enter 3 employee record id,name,address");
    for(int i=0;i<3;i++)
    {
        scanf("%s",emp1[i].id);
        scanf("%s",emp1[i].name);
        scanf("%s",emp1[i].address);
    }
    for(int i=0;i<3;i++)
    {
        printf("%s\n",emp1[i].id);
        printf("%s\n",emp1[i].name);
        printf("%s\n",emp1[i].address);
    }
    
printf("Enter employee id to delete\n");
scanf("%s",sid);
for (int i = 0; i < 3; i++) {
if(strcmp(sid,emp1[i].id) == 0)
{
flag=1;
strcpy(emp1[i].id," ");
strcpy(emp1[i].name," ");
strcpy(emp1[i].address," ");
break;
 }
}
if(flag==1)
{
printf("Employee deleted \n");
}
else
printf("Employee with id %s not found \n",sid);
printf("-------Employees List ------- \n");
for (int i = 0; i < 3; i++)
{
printf("%s\t",emp1[i].id);
printf("%s\n",emp1[i].name);
}

printf("Enter emp id to update");
scanf("%s",sid);
for(int i=0;i<3;i++){
if(strcmp(sid,emp1[i].id)==0)
{
    flag=1;
    sindex=i;
    printf("enter new id,name,address");
    scanf("%s",sid);
    scanf("%s",sname);
    scanf("%s",saddress);
    strcpy(emp1[i].id,sid);
    strcpy(emp1[i].name,sname);
    strcpy(emp1[i].address,saddress);
    break;
}
}
if(flag==1){
    printf("employee updated");
}
else
    printf("employee not found");
for(int i=0;i<3;i++)
{
    printf("%s\n",emp1[i].id);
    printf("%s\n",emp1[i].name);
    printf("%s\n",emp1[i].address);
    
}





return 0;
    
}




3)#include <stdio.h>
void demo();
int main()
{  
    
   for(int i=0;i<4;i++){
       demo();
   }
   return 0;

}
void demo(){
    static int a=4;
    a=a+4;
    
    printf("a is %d",a);
    
    
}



//scope of  variable
//local 
#include <stdio.h>

int main()
{
    int x=30;
    int y=20;
    int z=x+y;
    printf("value of x=%d,y=%d and z=%d",x,y,z);
    return 0;
}
//global
#include <stdio.h>
//global scope
int z;

int main()
{
    int x=10;
    int y=20;
    z=x+y;
    printf("value of x=%d,y=%d and z=%d",x,y,z);
    
    

    return 0;
}